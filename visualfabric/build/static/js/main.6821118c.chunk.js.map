{"version":3,"sources":["components/Block/block.module.scss","components/Search/search.module.scss","components/UI/button/button.module.scss","hoc/layout/layout.module.scss","components/UI/param/param.module.scss","components/UI/group/group.module.scss","containers/Chain/chain.module.scss","containers/AdvancedBlock/advancedBlock.module.scss","hoc/layout/layout.tsx","store/actions/actionTypes.tsx","store/actions/chain.tsx","components/UI/param/param.tsx","components/UI/group/group.tsx","components/Block/block.tsx","components/Search/search.tsx","containers/Chain/Chain.tsx","store/actions/advancedBlock.tsx","components/UI/button/button.tsx","components/BlockParts/header.tsx","components/BlockParts/metadata.tsx","components/BlockParts/actions.tsx","components/BlockParts/blockData.tsx","containers/AdvancedBlock/advancedBlock.tsx","App.tsx","store/reducers/chain.tsx","store/reducers/advancedBlock.tsx","index.tsx"],"names":["module","exports","layout","props","className","classes","header","children","INIT_CHAIN","ADD_BLOCK","SHOW_ADVANCED_BLOCK","HIDE_ADVANCED_BLOCK","loadChain","socket","dispatch","on","res","console","log","type","actionTypes","loadedChain","loadChainAction","param","title","dots","val","group","object","join","name","block","signatures","data","metadata","map","sign","creator_msp_id","dataSimplified","forEach","el","channel_id","channel_header","timestamp","signature_header","actions","act","rwset","proposal_response_payload","results","ns_rwset","reads","writes","set","read","write","value","push","dataSimplifiedJSX","id","transaction","onClick","showAdvanced","number","data_hash","previous_hash","Search","nr","useRef","nav","htmlFor","ref","onChange","e","current","target","setNr","setWrite","connect","state","chain","showAdvancedBlock","useState","nrSearch","setNrSearch","writesSearch","setWritesSearch","setData","useDispatch","useEffect","io","transports","newBlock","disconnect","useMemo","temp","newData","filter","toString","includes","button","classList","danger","info","action","signature","ret","endorsements","endors","endors_id","rwSets","set_id","write_id","key","is_delete","collectionHashed","collection_hashed_rwset","hashed","hashed_id","hashedReads","hashed_reads","hashedRead","hashedRead_id","key_hash","block_num","tx_num","value_hash","hashedWrites","hashed_writes","hashedWrite","hashedWrite_id","collection_name","pvt_rwset_hash","namespace","range_queries_info","creator_id_bytes","chaincode_proposal_payload","typeString","chaincode_id_name","input","args","decorations","is_init","proposal_hash","data_model","events","chaincode_id","tx_id","event_name","payload","response","status","message","path","version","Data","extension","blockData","visible","hideAdvancedBlock","advBlock","closeBtn","app","initState","reducer","composeEnhancers","compose","rootReducer","combineReducers","chainReducer","blockReducer","store","createStore","applyMiddleware","thunk","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6821118c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"block_block__2tMt-\",\"number\":\"block_number__32JFg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"search_nav__1dmlB\",\"writes\":\"search_writes__1h5wK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__3L_BO\",\"danger\":\"button_danger__2vUVO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"layout_header__3xTmc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"param\":\"param_param__3pRi7\",\"dots\":\"param_dots__29xS5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"group\":\"group_group__2ifWo\",\"object\":\"group_object__aZB8d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chain\":\"chain_chain__3zjbA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"advBlock\":\"advancedBlock_advBlock__392in\",\"visible\":\"advancedBlock_visible__U9e4r\",\"closeBtn\":\"advancedBlock_closeBtn__1HUuU\",\"number\":\"advancedBlock_number__dTTrL\"};","import React, { Fragment } from 'react';\r\n\r\nimport classes from './layout.module.scss';\r\n\r\nconst layout = (props: any) => {\r\n\r\n    return (\r\n        <Fragment>\r\n            <header className={classes.header}>\r\n                VisualFabric by Rafał Adamski - Thesis<br/>\r\n                Military University of Technology\r\n            </header>\r\n            <main className={classes.layout}>\r\n                {props.children}\r\n            </main>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default layout;","export const INIT_CHAIN = 'INIT_CHAIN';\r\nexport const ADD_BLOCK = 'ADD_BLOCK';\r\n\r\nexport const SHOW_ADVANCED_BLOCK = 'SHOW_ADVANCED_BLOCK';\r\nexport const HIDE_ADVANCED_BLOCK = 'HIDE_ADVANCED_BLOCK';","import * as actionTypes from './actionTypes';\r\nimport { MapEntry } from '../../../../interfaces';\r\nimport { Socket } from 'socket.io-client';\r\n\r\nconst loadChainAction = (res: MapEntry) => (\r\n    {\r\n        type: actionTypes.INIT_CHAIN,\r\n        loadedChain: res\r\n    }\r\n)\r\n\r\nexport const loadChain = (socket: Socket) => {\r\n    return (dispatch: any) => {\r\n        socket.on('loadChain', (res: MapEntry) => {\r\n            console.log('loading chain');\r\n            //const blockData = <Block[]>res.json(); -- jakos tak\r\n            dispatch(loadChainAction(res));\r\n        });\r\n    }\r\n}\r\n\r\nexport const addBlock = (res: MapEntry) => (\r\n    {\r\n        type: actionTypes.ADD_BLOCK,\r\n        newBlock: res\r\n    }\r\n)\r\n","import React from 'react';\r\nimport classes from './param.module.scss'\r\n\r\nconst param = (props: any) => {\r\n\r\n    return (\r\n        <p className={classes.param}>{props.title}<b className={classes.dots}>:</b><span>{props.val}</span></p>\r\n    );\r\n}\r\n\r\nexport default param;","import React from 'react';\r\nimport classes from './group.module.scss'\r\n\r\nconst group = (props: any) => {\r\n\r\n    let type = '';\r\n    switch (props?.type) {\r\n        case 'object':\r\n            type = classes.object;\r\n            break;\r\n        default:\r\n            type = '';\r\n    }\r\n\r\n    return (\r\n        <div className={[classes.group, props.className, type].join(' ')}>\r\n            <h3>{props.name}</h3>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default group;","import React from 'react';\r\nimport {Signature, BlockData, Action, RWSet, Write} from '../../../../interfaces';\r\nimport classes from './block.module.scss'\r\nimport Param from '../UI/param/param';\r\nimport Group from '../UI/group/group';\r\n\r\nconst block = (props: any) => {\r\n\r\n    const header = props.data.data.header;\r\n    const data = props.data.data.data;\r\n    const metadata = props.data.data.metadata;\r\n\r\n    //signatures\r\n    let signatures: string = '';\r\n    signatures = metadata.signatures.map((sign: Signature) => (\r\n        sign.creator_msp_id + ', '\r\n    ));\r\n\r\n    //data\r\n    let dataSimplified: any[] = [];\r\n    data.forEach((el: BlockData) => {\r\n        const channel_id: string = el.channel_header.channel_id;\r\n        const timestamp: string = el.channel_header.timestamp;\r\n        const creator_msp_id: string = el.signature_header.creator_msp_id;\r\n\r\n        el.actions.forEach((act: Action) => {\r\n\r\n            const rwset: RWSet[] = act.proposal_response_payload.results.ns_rwset;\r\n\r\n            let reads: string = '';\r\n            let writes: string = '';\r\n\r\n            rwset.forEach((set: RWSet) => {\r\n\r\n                //reads\r\n                set.rwset.reads.forEach((read: string) => (\r\n                    reads += read + ', '\r\n                ));\r\n\r\n                //writes\r\n                set.rwset.writes.forEach((write: Write) => (\r\n                    writes += write.value + ', '\r\n                ));\r\n\r\n            });\r\n\r\n            dataSimplified.push({\r\n                channel_id: channel_id,\r\n                timestamp: timestamp,\r\n                creator_msp_id: creator_msp_id,\r\n                reads: reads,\r\n                writes: writes\r\n            });\r\n\r\n        });\r\n\r\n    });\r\n\r\n    let dataSimplifiedJSX: any = null;\r\n    dataSimplifiedJSX = dataSimplified.map((el: any, id: number) => (\r\n        <Group name='Transaction' className={classes.transaction} key={id}>\r\n            <Param title='channel_id' val={el.channel_id} />\r\n            <Param title='creator_msp_id' val={el.creator_msp_id} />\r\n            <Param title='timestamp' val={el.timestamp} />\r\n            <Param title='reads' val={el.reads} />\r\n            <Param title='writes' val={el.writes} />\r\n        </Group>\r\n    ));\r\n\r\n    //console.log(JSON.stringify(dataSimplified));\r\n\r\n    return (\r\n        <div className={classes.block} onClick={props.showAdvanced}>\r\n            <h2>Block <span className={classes.number}>#{header.number}</span></h2>\r\n\r\n            <Group name='Header' className={classes.header}>\r\n                <Param title='data_hash' val={header.data_hash}/>\r\n                <Param title='previous_hash' val={header.previous_hash}/>\r\n            </Group>\r\n\r\n            {dataSimplifiedJSX}\r\n\r\n            <Group name='Metadata' className={classes.metadata}>\r\n                <Param title='signatures' val={signatures} />\r\n                <Param title='value' val={metadata.value} />\r\n            </Group>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default block;","import React, { Fragment, useRef } from 'react';\r\nimport classes from './search.module.scss'\r\n\r\nconst Search = (props: any) => {\r\n\r\n    const nr: any = useRef();\r\n    const write: any = useRef();\r\n\r\n    const nrChanged = (e: any) => {\r\n        write.current.value = null;\r\n        let val = e.target.value;\r\n        if(val === '') {\r\n            props.setNr(-1);\r\n        }\r\n        else{\r\n            props.setNr(val);\r\n        }\r\n    }\r\n\r\n    const writesChanged = (e: any) => {\r\n        nr.current.value = null;\r\n        let val = e.target.value;\r\n        if(val === '') {\r\n            props.setWrite('');\r\n        }\r\n        else{\r\n            props.setWrite(val);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.nr}>\r\n                <label htmlFor=\"BlockNr\">Find block number:</label>\r\n                <input ref={nr} id=\"BlockNr\" type=\"number\" onChange={nrChanged} />\r\n            </div>\r\n\r\n            <div className={classes.writes}>\r\n                <label htmlFor=\"BlockWrites\">Find in writes:</label>\r\n                <input ref={write} id=\"BlockWrites\" type=\"text\" onChange={writesChanged}/>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Search;","import React, {useEffect, Fragment, useState, useMemo} from 'react';\r\nimport {connect, useDispatch} from 'react-redux';\r\nimport {io, Socket} from 'socket.io-client';\r\nimport * as actions from '../../store/actions/index';\r\nimport Block from '../../components/Block/block';\r\nimport Search from '../../components/Search/search';\r\n\r\nimport {MapEntry, BlockData, Action, RWSet, Write} from '../../../../interfaces';\r\nimport classes from './chain.module.scss';\r\n\r\nconst Chain = (props: any) => {\r\n\r\n  const [nrSearch, setNrSearch] = useState(-1);\r\n  const [writesSearch, setWritesSearch] = useState('');\r\n  const [data, setData] = useState();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    console.log('connection');\r\n\r\n    //socket connection\r\n    const socket: Socket = io('http://127.0.0.1:8000', {\r\n      transports: ['websocket']\r\n    });\r\n\r\n    //loading chain\r\n    dispatch(actions.loadChain(socket));\r\n\r\n    socket.on('addBlock', (res: MapEntry) => {\r\n      console.log('AddBlock socket event');\r\n      dispatch(actions.addBlock(res));\r\n    });\r\n\r\n    return () => {\r\n      console.log('socket disconnect');\r\n      socket.disconnect();\r\n    }\r\n  }, [dispatch]);\r\n\r\n\r\n  const initLoad = useMemo(() => {\r\n    console.log('initLoad');\r\n    let temp = props.chain.map((el: MapEntry) => (\r\n      <Block key={el.id} data={el} showAdvanced={() => props.showAdvancedBlock(el)}/>\r\n    ))\r\n    setData(temp);\r\n  }, [props]);\r\n\r\n  useEffect(() => {\r\n    console.log('NR');\r\n\r\n    let newData = props.chain;\r\n    if(nrSearch !== -1) {\r\n      newData = props.chain.filter((el: MapEntry) => el.id === nrSearch.toString());\r\n    }\r\n\r\n    let temp = newData.map((el: MapEntry) => (\r\n      <Block key={el.id} data={el} showAdvanced={() => props.showAdvancedBlock(el)}/>\r\n    ))\r\n    setData(temp);\r\n\r\n  }, [nrSearch])\r\n\r\n  useEffect(() => {\r\n    console.log('WRITE');\r\n\r\n\r\n    let newData = props.chain;\r\n    if(writesSearch !== '') {\r\n      newData = props.chain.filter((el: MapEntry) => {\r\n        let writes: string = '';\r\n\r\n        //parse writes\r\n        el.data.data.forEach((el: BlockData) => {\r\n            el.actions.forEach((act: Action) => {\r\n\r\n                const rwset: RWSet[] = act.proposal_response_payload.results.ns_rwset;\r\n                rwset.forEach((set: RWSet) => {\r\n                    //writes\r\n                    set.rwset.writes.forEach((write: Write) => (\r\n                        writes += write.value + ', '\r\n                    ));\r\n\r\n                });\r\n\r\n            });\r\n\r\n        });\r\n\r\n        return writes.includes(writesSearch);\r\n\r\n      });\r\n    }\r\n\r\n    let temp = newData.map((el: MapEntry) => (\r\n      <Block key={el.id} data={el} showAdvanced={() => props.showAdvancedBlock(el)}/>\r\n    ))\r\n    setData(temp);\r\n\r\n  }, [writesSearch])\r\n\r\n  console.log('obok');\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n        <Search setNr={(nr: number) => setNrSearch(nr)} setWrite={(write: string) => setWritesSearch(write)} />\r\n      <div className={classes.chain}>\r\n        {data}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    chain: state.chain.chain\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    loadChain: (socket: Socket) => dispatch(actions.loadChain(socket)),\r\n    showAdvancedBlock: (data: MapEntry) => dispatch(actions.showAdvancedBlock(data))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chain);\r\n","import * as actionTypes from './actionTypes';\r\nimport { MapEntry } from '../../../../interfaces';\r\n\r\nexport const showAdvancedBlock = (data: MapEntry) => (\r\n    {\r\n        type: actionTypes.SHOW_ADVANCED_BLOCK,\r\n        data: data\r\n    }\r\n);\r\n\r\nexport const hideAdvancedBlock = () => {\r\n    return {\r\n        type: actionTypes.HIDE_ADVANCED_BLOCK\r\n    }\r\n};","import React from 'react';\r\nimport classes from './button.module.scss'\r\n\r\nconst button = (props: any) => {\r\n\r\n    const classList = [classes.button, props.className];\r\n    switch (props.type){\r\n        case 'danger':\r\n            classList.push(classes.danger);\r\n            break;\r\n        default:\r\n            classList.push(classes.info);\r\n    }\r\n\r\n    return (\r\n        <button className={classList.join(' ')} onClick={props.action}>{props.children}</button>\r\n    );\r\n}\r\n\r\nexport default button;","import React from 'react';\r\nimport Group from '../UI/group/group';\r\nimport Param from '../UI/param/param';\r\n\r\nconst header = (props: any) => {\r\n\r\n\r\n    return (\r\n        <Group name='Header' className={props.className}>\r\n            <Param title='number' val={props.data.number}/>\r\n            <Param title='data_hash' val={props.data.data_hash}/>\r\n            <Param title='previous_hash' val={props.data.previous_hash}/>\r\n        </Group>\r\n    );\r\n}\r\n\r\nexport default header;","import React from 'react';\r\nimport {Signature} from '../../../../interfaces';\r\nimport Group from '../UI/group/group';\r\nimport Param from '../UI/param/param';\r\n\r\nconst metadata = (props: any) => {\r\n\r\n    const data = props.data;\r\n    //parse data\r\n    let signatures = null;\r\n    signatures = data.signatures.map((sign: Signature, id: number) => (\r\n        <Group name='Signature' key={id}>\r\n            <Param title='creator_msp_id' val={sign.creator_msp_id}/>\r\n            <Param title='signature' val={sign.signature}/>\r\n        </Group>\r\n    ));\r\n\r\n    return (\r\n        <Group name='Metadata' className={props.className}>\r\n            <Param title='value' val={data.value}/>\r\n\r\n            {signatures}\r\n\r\n        </Group>\r\n    );\r\n}\r\n\r\nexport default metadata;","import React, {Fragment} from 'react';\r\nimport {Action, CollectionHashedRWSet, HashInfo, RWSet, Signature, Write} from '../../../../interfaces';\r\nimport Group from '../UI/group/group';\r\nimport Param from '../UI/param/param';\r\n\r\nconst actions = (props: any) => {\r\n\r\n    //parse data\r\n    let ret = null;\r\n    ret = props.data.map((el: Action, id: number) => {\r\n\r\n        //parse endorsements\r\n        let endorsements = null;\r\n        endorsements = el.endorsements.map((endors: Signature, endors_id: number) => (\r\n            <Group name='Endorsement' key={endors_id}>\r\n                <Param title='creator_msp_id' val={endors.creator_msp_id}/>\r\n                <Param title='signature' val={endors.signature}/>\r\n            </Group>\r\n        ));\r\n\r\n        //parse RWset\r\n        let rwSets = null;\r\n        rwSets = el.proposal_response_payload.results.ns_rwset.map((set: RWSet, set_id: number) => {\r\n\r\n            //parse Writes\r\n            let writes = null;\r\n            writes = set.rwset.writes.map((write: Write, write_id: number)  => (\r\n                <Group name='Write' key={write_id}>\r\n                    <Param title='key' val={write.key}/>\r\n                    <Param title='is_delete' val={write.is_delete}/>\r\n                    <Param title='value' val={write.value}/>\r\n                </Group>\r\n            ));\r\n\r\n            //parse CollectionHashedRWSet\r\n            let collectionHashed = null;\r\n            collectionHashed = set.collection_hashed_rwset.map((hashed: CollectionHashedRWSet, hashed_id: number)  => {\r\n\r\n                //parse hashedReads\r\n                let hashedReads = null;\r\n                hashedReads = hashed.hashed_reads.map((hashedRead: HashInfo, hashedRead_id: number)  => (\r\n                    <Group name='HashedRead' key={hashedRead_id}>\r\n                        <Param title='key_hash' val={hashedRead.key_hash}/>\r\n                        <Param title='block_num' val={hashedRead.block_num}/>\r\n                        <Param title='tx_num' val={hashedRead.tx_num}/>\r\n                        <Param title='is_delete' val={hashedRead.is_delete}/>\r\n                        <Param title='value_hash' val={hashedRead.value_hash}/>\r\n                    </Group>\r\n                ));\r\n\r\n                //parse hashedWrites\r\n                let hashedWrites = null;\r\n                hashedWrites = hashed.hashed_writes.map((hashedWrite: HashInfo, hashedWrite_id: number)  => (\r\n                    <Group name='HashedWrite' key={hashedWrite_id}>\r\n                        <Param title='key_hash' val={hashedWrite.key_hash}/>\r\n                        <Param title='block_num' val={hashedWrite.block_num}/>\r\n                        <Param title='tx_num' val={hashedWrite.tx_num}/>\r\n                        <Param title='is_delete' val={hashedWrite.is_delete}/>\r\n                        <Param title='value_hash' val={hashedWrite.value_hash}/>\r\n                    </Group>\r\n                ));\r\n\r\n                return (\r\n                    <Group name='CollectionHashedRWSet' key={hashed_id}>\r\n                        <Param title='collection_name' val={hashed.collection_name}/>\r\n                        <Param title='pvt_rwset_hash' val={hashed.pvt_rwset_hash}/>\r\n\r\n                        <Group type='object' name='hashed_reads'>\r\n                            {hashedReads}\r\n                        </Group>\r\n\r\n                        <Group type='object' name='hashed_writes'>\r\n                            {hashedWrites}\r\n                        </Group>\r\n\r\n                    </Group>\r\n                );\r\n            });\r\n\r\n\r\n            return (\r\n                <Group name='RWSet' key={set_id}>\r\n                    <Param title='namespace' val={set.namespace}/>\r\n\r\n                    <Group type='object' name='rwset'>\r\n                        <Param title='reads' val={set.rwset.reads.join(', ')}/>\r\n                        <Param title='range_queries_info' val={set.rwset.range_queries_info.join(', ')}/>\r\n\r\n                        {writes}\r\n                    </Group>\r\n\r\n                    {collectionHashed}\r\n                </Group>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <Group name='Action' key={id}>\r\n\r\n                <Group type='object' name='header'>\r\n                    <Param title='creator_msp_id' val={el.header.creator_msp_id}/>\r\n                    <Param title='creator_id_bytes' val={el.header.creator_id_bytes}/>\r\n                </Group>\r\n\r\n                <Group type='object' name='chaincode_proposal_payload'>\r\n                    <Param title='type' val={el.chaincode_proposal_payload.type}/>\r\n                    <Param title='typeString' val={el.chaincode_proposal_payload.typeString}/>\r\n                    <Param title='chaincode_id_name' val={el.chaincode_proposal_payload.chaincode_id_name}/>\r\n\r\n                    <Group type='object' name='input'>\r\n                        <Param title='args' val={el.chaincode_proposal_payload.input.args.join(', ')}/>\r\n                        <Param title='decorations' val={el.chaincode_proposal_payload.input.decorations}/>\r\n                        <Param title='is_init' val={el.chaincode_proposal_payload.input.is_init}/>\r\n                    </Group>\r\n\r\n                </Group>\r\n\r\n\r\n                <Group type='object' name='chaincode_response_payload'>\r\n                    <Param title='proposal_hash' val={el.proposal_response_payload.proposal_hash}/>\r\n\r\n                    <Group type='object' name='results'>\r\n                        <Param title='data_model' val={el.proposal_response_payload.results.data_model}/>\r\n\r\n                        {rwSets}\r\n                    </Group>\r\n\r\n                    <Group type='object' name='events'>\r\n                        <Param title='chaincode_id' val={el.proposal_response_payload.events.chaincode_id}/>\r\n                        <Param title='tx_id' val={el.proposal_response_payload.events.tx_id}/>\r\n                        <Param title='event_name' val={el.proposal_response_payload.events.event_name}/>\r\n                        <Param title='payload' val={el.proposal_response_payload.events.payload}/>\r\n                    </Group>\r\n\r\n                    <Group type='object' name='response'>\r\n                        <Param title='status' val={el.proposal_response_payload.response.status}/>\r\n                        <Param title='message' val={el.proposal_response_payload.response.message}/>\r\n                        <Param title='payload' val={el.proposal_response_payload.response.payload}/>\r\n                    </Group>\r\n\r\n                    <Group type='object' name='chaincode_id'>\r\n                        <Param title='path' val={el.proposal_response_payload.chaincode_id.path}/>\r\n                        <Param title='name' val={el.proposal_response_payload.chaincode_id.name}/>\r\n                        <Param title='version' val={el.proposal_response_payload.chaincode_id.version}/>\r\n                    </Group>\r\n\r\n                </Group>\r\n\r\n                {endorsements}\r\n\r\n\r\n            </Group>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <Fragment>\r\n            {ret}\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default actions;","import React, {Fragment} from 'react';\r\nimport {BlockData} from '../../../../interfaces';\r\nimport Group from '../UI/group/group';\r\nimport Param from '../UI/param/param';\r\nimport Actions from './actions';\r\n\r\nconst Data = (props: any) => {\r\n\r\n    const data = props.data;\r\n    //parse data\r\n    let ret = null;\r\n    ret = data.map((el: BlockData, id: number) => (\r\n        <Group name='Block Data' key={id} className={props.className}>\r\n\r\n            <Param title='signature' val={el.signature}/>\r\n\r\n            <Group type='object' name='channel_header'>\r\n                <Param title='type' val={el.channel_header.type} />\r\n                <Param title='version' val={el.channel_header.version} />\r\n                <Param title='timestamp' val={el.channel_header.timestamp} />\r\n                <Param title='chennel_id' val={el.channel_header.channel_id} />\r\n                <Param title='tx_id' val={el.channel_header.tx_id} />\r\n                <Param title='extension' val={el.channel_header.extension} />\r\n                <Param title='typeString' val={el.channel_header.typeString} />\r\n            </Group>\r\n\r\n            <Group type='object' name='signature_header'>\r\n                <Param title='creator_msp_id' val={el.signature_header.creator_msp_id} />\r\n                <Param title='creator_id_bytes' val={el.signature_header.creator_id_bytes} />\r\n            </Group>\r\n\r\n            <Actions data={el.actions} />\r\n\r\n        </Group>\r\n    ));\r\n\r\n    return (\r\n        <Fragment>\r\n            {ret}\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Data;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../../store/actions';\r\nimport classes from './advancedBlock.module.scss';\r\nimport Button from '../../components/UI/button/button';\r\nimport Header from '../../components/BlockParts/header';\r\nimport Metadata from '../../components/BlockParts/metadata';\r\nimport Data from '../../components/BlockParts/blockData';\r\n\r\nconst advancedBlock = (props: any) => {\r\n\r\n    //show/hide\r\n    let classList = [classes.advBlock];\r\n    if (props.visible){\r\n        classList.push(classes.visible);\r\n    }\r\n\r\n    if(props.blockData !== null){\r\n\r\n        const header = props.blockData.data.header;\r\n        const data = props.blockData.data.data;\r\n        const metadata = props.blockData.data.metadata;\r\n\r\n        return (\r\n            <div className={classList.join(' ')}>\r\n\r\n                <Button className={classes.closeBtn} type='danger'\r\n                    action={() => props.hideAdvancedBlock()}>\r\n                    Close\r\n                </Button>\r\n\r\n                <h2>Block <span className={classes.number}>#{header.number}</span></h2>\r\n\r\n                <Header data={header} className={classes.header}/>\r\n\r\n                <Data data={data} className={classes.data}/>\r\n\r\n                <Metadata data={metadata} className={classes.metadata} />\r\n\r\n            </div>\r\n        );\r\n\r\n    }\r\n    else {\r\n        return (\r\n            <div className={classList.join(' ')}>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n      blockData: state.block.blockData,\r\n      visible: state.block.visible\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n      hideAdvancedBlock: () => dispatch(actions.hideAdvancedBlock())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(advancedBlock);","import React from 'react';\n\nimport Layout from './hoc/layout/layout';\nimport Chain from './containers/Chain/Chain';\nimport AdvancedBlock from './containers/AdvancedBlock/advancedBlock';\n\nconst app = () => {\n  return (\n    <Layout>\n      <AdvancedBlock />\n      <Chain />\n    </Layout>\n  );\n}\n\nexport default app;\n","import * as actionTypes from '../actions/actionTypes';\r\nimport { MapEntry } from '../../../../interfaces';\r\n\r\ninterface State {\r\n    chain: MapEntry[]\r\n}\r\n\r\nconst initState: State = {\r\n    chain: []\r\n}\r\n\r\nconst reducer = (state = initState, action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.INIT_CHAIN: {\r\n            return {\r\n                chain: [...action.loadedChain]\r\n            }\r\n        }\r\n        case actionTypes.ADD_BLOCK: {\r\n            return {\r\n                chain: [...state.chain, action.newBlock]\r\n                //nested objects - should be immutable\r\n            }\r\n\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { MapEntry } from '../../../../interfaces';\r\n\r\ninterface State {\r\n    blockData: MapEntry | null,\r\n    visible: boolean\r\n}\r\n\r\nconst initState: State = {\r\n    blockData: null,\r\n    visible: false\r\n}\r\n\r\nconst reducer = (state = initState, action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.SHOW_ADVANCED_BLOCK: {\r\n            const newData = {...action.data};\r\n            return {\r\n                blockData: newData,\r\n                visible: true\r\n            }\r\n        }\r\n        case actionTypes.HIDE_ADVANCED_BLOCK: {\r\n            return {\r\n                ...state,\r\n                visible: false\r\n            }\r\n\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport App from './App';\nimport chainReducer from './store/reducers/chain';\nimport blockReducer from './store/reducers/advancedBlock';\n\n\nconst composeEnhancers = compose;\n\nconst rootReducer = combineReducers({\n  chain: chainReducer,\n  block: blockReducer\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(thunk)\n));\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(\n  app,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}